{
  "headers": {
    "content-type": "application/json; charset=UTF-8",
    "vary": "Origin, X-Origin, Referer",
    "date": "Thu, 19 Jan 2023 13:02:06 GMT",
    "server": "ESF",
    "cache-control": "private",
    "x-xss-protection": "0",
    "x-frame-options": "SAMEORIGIN",
    "x-content-type-options": "nosniff",
    "alt-svc": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"",
    "transfer-encoding": "chunked",
    "status": "200",
    "content-length": "3174",
    "-content-encoding": "gzip",
    "content-location": "https://iam.googleapis.com/v1/roles/networkmanagement.serviceAgent?alt=json"
  },
  "body": {
    "name": "roles/networkmanagement.serviceAgent",
    "title": "GCP Network Management Service Agent",
    "description": "Grants the GCP Network Management API the authority to complete analysis based on network configurations from Compute Engine and Container Engine.",
    "includedPermissions": [
      "cloudsql.instances.get",
      "cloudsql.instances.list",
      "compute.addresses.get",
      "compute.addresses.list",
      "compute.backendServices.get",
      "compute.backendServices.list",
      "compute.externalVpnGateways.get",
      "compute.externalVpnGateways.list",
      "compute.firewalls.get",
      "compute.firewalls.list",
      "compute.forwardingRules.get",
      "compute.forwardingRules.list",
      "compute.globalAddresses.get",
      "compute.globalAddresses.list",
      "compute.globalForwardingRules.get",
      "compute.globalForwardingRules.list",
      "compute.globalNetworkEndpointGroups.get",
      "compute.globalNetworkEndpointGroups.list",
      "compute.healthChecks.get",
      "compute.healthChecks.list",
      "compute.httpHealthChecks.get",
      "compute.httpHealthChecks.list",
      "compute.httpsHealthChecks.get",
      "compute.httpsHealthChecks.list",
      "compute.instanceGroups.get",
      "compute.instanceGroups.list",
      "compute.instances.get",
      "compute.instances.list",
      "compute.networkEndpointGroups.get",
      "compute.networkEndpointGroups.list",
      "compute.networks.get",
      "compute.networks.getEffectiveFirewalls",
      "compute.networks.list",
      "compute.networks.listPeeringRoutes",
      "compute.packetMirrorings.get",
      "compute.packetMirrorings.list",
      "compute.regionBackendServices.get",
      "compute.regionBackendServices.list",
      "compute.regionHealthChecks.get",
      "compute.regionHealthChecks.list",
      "compute.regionNetworkEndpointGroups.get",
      "compute.regionNetworkEndpointGroups.list",
      "compute.regionTargetHttpProxies.get",
      "compute.regionTargetHttpProxies.list",
      "compute.regionTargetHttpsProxies.get",
      "compute.regionTargetHttpsProxies.list",
      "compute.regionUrlMaps.get",
      "compute.regionUrlMaps.list",
      "compute.routers.get",
      "compute.routers.list",
      "compute.routes.get",
      "compute.routes.list",
      "compute.subnetworks.get",
      "compute.subnetworks.list",
      "compute.targetGrpcProxies.get",
      "compute.targetGrpcProxies.list",
      "compute.targetHttpProxies.get",
      "compute.targetHttpProxies.list",
      "compute.targetHttpsProxies.get",
      "compute.targetHttpsProxies.list",
      "compute.targetInstances.get",
      "compute.targetInstances.list",
      "compute.targetPools.get",
      "compute.targetPools.list",
      "compute.targetSslProxies.get",
      "compute.targetSslProxies.list",
      "compute.targetTcpProxies.get",
      "compute.targetTcpProxies.list",
      "compute.targetVpnGateways.get",
      "compute.targetVpnGateways.list",
      "compute.urlMaps.get",
      "compute.urlMaps.list",
      "compute.vpnGateways.get",
      "compute.vpnGateways.list",
      "compute.vpnTunnels.get",
      "compute.vpnTunnels.list",
      "container.clusters.get",
      "container.clusters.list",
      "container.nodes.get",
      "container.nodes.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  }
}