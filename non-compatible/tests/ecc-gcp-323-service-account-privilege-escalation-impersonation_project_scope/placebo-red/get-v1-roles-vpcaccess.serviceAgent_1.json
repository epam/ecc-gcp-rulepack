{
  "headers": {
    "content-type": "application/json; charset=UTF-8",
    "vary": "Origin, X-Origin, Referer",
    "date": "Thu, 19 Jan 2023 13:02:14 GMT",
    "server": "ESF",
    "cache-control": "private",
    "x-xss-protection": "0",
    "x-frame-options": "SAMEORIGIN",
    "x-content-type-options": "nosniff",
    "alt-svc": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"",
    "transfer-encoding": "chunked",
    "status": "200",
    "content-length": "3628",
    "-content-encoding": "gzip",
    "content-location": "https://iam.googleapis.com/v1/roles/vpcaccess.serviceAgent?alt=json"
  },
  "body": {
    "name": "roles/vpcaccess.serviceAgent",
    "title": "Serverless VPC Access Service Agent",
    "description": "Can create and manage resources to support serverless application to connect to virtual private cloud.",
    "includedPermissions": [
      "billing.accounts.get",
      "compute.autoscalers.create",
      "compute.autoscalers.delete",
      "compute.autoscalers.get",
      "compute.autoscalers.list",
      "compute.autoscalers.update",
      "compute.disks.create",
      "compute.firewalls.create",
      "compute.firewalls.delete",
      "compute.firewalls.get",
      "compute.firewalls.list",
      "compute.firewalls.update",
      "compute.healthChecks.create",
      "compute.healthChecks.delete",
      "compute.healthChecks.get",
      "compute.healthChecks.list",
      "compute.healthChecks.update",
      "compute.healthChecks.use",
      "compute.healthChecks.useReadOnly",
      "compute.httpHealthChecks.create",
      "compute.httpHealthChecks.delete",
      "compute.httpHealthChecks.get",
      "compute.httpHealthChecks.list",
      "compute.httpHealthChecks.use",
      "compute.httpHealthChecks.useReadOnly",
      "compute.httpsHealthChecks.create",
      "compute.httpsHealthChecks.delete",
      "compute.httpsHealthChecks.get",
      "compute.httpsHealthChecks.update",
      "compute.httpsHealthChecks.use",
      "compute.httpsHealthChecks.useReadOnly",
      "compute.images.get",
      "compute.images.useReadOnly",
      "compute.instanceGroupManagers.create",
      "compute.instanceGroupManagers.delete",
      "compute.instanceGroupManagers.get",
      "compute.instanceGroupManagers.update",
      "compute.instanceGroupManagers.use",
      "compute.instanceGroups.create",
      "compute.instanceGroups.delete",
      "compute.instanceGroups.get",
      "compute.instanceGroups.update",
      "compute.instanceTemplates.create",
      "compute.instanceTemplates.delete",
      "compute.instanceTemplates.get",
      "compute.instanceTemplates.useReadOnly",
      "compute.instances.create",
      "compute.instances.delete",
      "compute.instances.get",
      "compute.instances.getGuestAttributes",
      "compute.instances.list",
      "compute.instances.reset",
      "compute.instances.setLabels",
      "compute.instances.setMetadata",
      "compute.instances.setTags",
      "compute.instances.start",
      "compute.instances.stop",
      "compute.instances.use",
      "compute.machineTypes.get",
      "compute.networks.get",
      "compute.networks.use",
      "compute.projects.get",
      "compute.projects.setCommonInstanceMetadata",
      "compute.regionOperations.get",
      "compute.regionOperations.list",
      "compute.regions.get",
      "compute.regions.list",
      "compute.subnetworks.create",
      "compute.subnetworks.delete",
      "compute.subnetworks.get",
      "compute.subnetworks.list",
      "compute.subnetworks.use",
      "compute.zoneOperations.get",
      "compute.zoneOperations.list",
      "compute.zones.get",
      "compute.zones.list",
      "deploymentmanager.compositeTypes.get",
      "deploymentmanager.deployments.create",
      "deploymentmanager.deployments.delete",
      "deploymentmanager.deployments.get",
      "deploymentmanager.deployments.list",
      "deploymentmanager.deployments.update",
      "deploymentmanager.manifests.get",
      "deploymentmanager.manifests.list",
      "deploymentmanager.operations.get",
      "deploymentmanager.operations.list",
      "deploymentmanager.typeProviders.create",
      "deploymentmanager.typeProviders.get",
      "logging.logEntries.create",
      "logging.logMetrics.create",
      "logging.logMetrics.delete",
      "logging.logMetrics.get",
      "logging.logMetrics.update",
      "resourcemanager.projects.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  }
}